# Songmetrix Supabase Backup Container
# Container READ-ONLY para backup seguro do Supabase

FROM node:18-alpine

# Labels para identifica√ß√£o
LABEL maintainer="Songmetrix Team"
LABEL description="Supabase Backup Service - Read-Only Operations Only"
LABEL version="1.0"

# Vari√°veis de ambiente para agendamento e limpeza
ENV BACKUP_ENABLED=true \
    BACKUP_HOUR=02 \
    BACKUP_MIN=00 \
    BACKUP_RETENTION_DAYS=15 \
    BACKUP_CLEANUP_ENABLED=true

# Instalar PostgreSQL client e MinIO client para pg_dump e upload
RUN apk add --no-cache \
    postgresql-client \
    postgresql \
    curl \
    && rm -rf /var/cache/apk/* \
    && curl -sSL https://dl.min.io/client/mc/release/linux-amd64/mc -o /usr/local/bin/mc \
    && chmod +x /usr/local/bin/mc

# Criar usu√°rio n√£o-root para seguran√ßa
RUN addgroup -g 1001 -S backupuser && \
    adduser -S -D -H -u 1001 -h /app -s /sbin/nologin -G backupuser -g backupuser backupuser

# Criar diret√≥rios necess√°rios
RUN mkdir -p /app/temp /app/logs /app/scripts && \
    chown -R backupuser:backupuser /app

# Definir usu√°rio n√£o-root
USER backupuser

# Diret√≥rio de trabalho
WORKDIR /app

# Copiar arquivos de depend√™ncias primeiro (para cache de layers)
COPY --chown=backupuser:backupuser package*.json ./

# Instalar depend√™ncias
RUN npm ci --only=production --no-audit --no-fund

# Copiar c√≥digo da aplica√ß√£o
COPY --chown=backupuser:backupuser scripts/supabase-backup.js scripts/

# Criar arquivo de configura√ß√£o de exemplo
RUN echo "# Supabase Backup Configuration Example" > .env.example && \
    echo "SUPABASE_DB_HOST=db.aylxcqaddelwxfukerhr.supabase.co" >> .env.example && \
    echo "SUPABASE_DB_PORT=5432" >> .env.example && \
    echo "SUPABASE_DB_NAME=postgres" >> .env.example && \
    echo "SUPABASE_DB_USER=postgres" >> .env.example && \
    echo "SUPABASE_DB_PASSWORD=your_password_here" >> .env.example && \
    echo "" >> .env.example && \
    echo "# MinIO Configuration" >> .env.example && \
    echo "MINIO_ENDPOINT=files.songmetrix.com.br" >> .env.example && \
    echo "MINIO_ACCESS_KEY=admin" >> .env.example && \
    echo "MINIO_SECRET_KEY=your_secret_key" >> .env.example && \
    echo "MINIO_BUCKET=songmetrix-backups" >> .env.example && \
    echo "MINIO_USE_SSL=true" >> .env.example

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=40s --retries=3 \
    CMD pg_isready -h ${SUPABASE_DB_HOST:-db.aylxcqaddelwxfukerhr.supabase.co} -p ${SUPABASE_DB_PORT:-5432} || exit 1

# Comando com agendamento autom√°tico e limpeza
CMD ["sh", "-c", "\
  echo 'üóÑÔ∏è Songmetrix Supabase Backup Service' && \
  echo \"BACKUP_ENABLED: $BACKUP_ENABLED\" && \
  echo \"Hor√°rio agendado: $BACKUP_HOUR:$BACKUP_MIN\" && \
  echo \"Reten√ß√£o: $BACKUP_RETENTION_DAYS dias\" && \
  echo \"Limpeza autom√°tica: $BACKUP_CLEANUP_ENABLED\" && \
  \
  if [ \"$BACKUP_ENABLED\" = \"true\" ]; then \
    echo '‚è∞ Modo agendado ativado - aguardando hor√°rio programado...' && \
    while true; do \
      CURRENT_HOUR=$(date +%H) && \
      CURRENT_MIN=$(date +%M) && \
      \
      if [ \"$CURRENT_HOUR\" = \"$BACKUP_HOUR\" ] && [ \"$CURRENT_MIN\" = \"$BACKUP_MIN\" ]; then \
        echo 'üöÄ Executando backup programado...' && \
        node scripts/supabase-backup.js && \
        \
        if [ \"$BACKUP_CLEANUP_ENABLED\" = \"true\" ]; then \
          echo \"üßπ Executando limpeza de backups antigos (> $BACKUP_RETENTION_DAYS dias)...\" && \
          mc alias set cleanup-alias https://$MINIO_ENDPOINT $MINIO_ACCESS_KEY $MINIO_SECRET_KEY --ignore-existing 2>/dev/null && \
          mc rm --recursive --force --older-than ${BACKUP_RETENTION_DAYS}d cleanup-alias/$MINIO_BUCKET/supabase/ 2>/dev/null && \
          echo \"‚úÖ Limpeza conclu√≠da\"; \
        fi && \
        \
        echo '‚úÖ Ciclo conclu√≠do - aguardando pr√≥ximo backup...' && \
        sleep 60; \
      else \
        sleep 30; \
      fi; \
    done; \
  else \
    echo 'üîÑ Modo √∫nico ativado - executando backup imediato...' && \
    node scripts/supabase-backup.js && \
    echo '‚úÖ Backup √∫nico conclu√≠do'; \
  fi \
"]

# Exposi√ß√£o de porta (n√£o necess√°ria para backup)
# EXPOSE n√£o √© usado pois √© um job, n√£o um servi√ßo web

# Volumes para persist√™ncia de logs (opcional)
VOLUME ["/app/logs"]