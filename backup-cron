#!/bin/bash

# ============================================
# Songmetrix Backup Service - Cron Script
# Executa backups automatizados dentro do container
# ============================================

# Configura√ß√µes
SCRIPT_DIR="/app"
LOG_FILE="/app/logs/cron.log"
BACKUP_SCRIPT="$SCRIPT_DIR/scripts/backup-orchestrator.js"
MONITORING_SCRIPT="$SCRIPT_DIR/scripts/monitoring-service.js"
CLEANUP_SCRIPT="$SCRIPT_DIR/scripts/cleanup-service.js"

# Cores para logs
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# Fun√ß√£o de log
log() {
    local level="$1"
    local message="$2"
    local timestamp=$(date '+%Y-%m-%d %H:%M:%S')
    echo -e "[$timestamp] [$level] $message" >> "$LOG_FILE"
    echo -e "[$timestamp] [$level] $message"
}

# Fun√ß√£o para executar backup
run_backup() {
    log "INFO" "üöÄ Iniciando backup completo do Songmetrix..."
    local start_time=$(date +%s)

    if node "$BACKUP_SCRIPT" >> "$LOG_FILE" 2>&1; then
        local end_time=$(date +%s)
        local duration=$((end_time - start_time))
        log "SUCCESS" "‚úÖ Backup conclu√≠do com sucesso em ${duration}s"
        return 0
    else
        local end_time=$(date +%s)
        local duration=$((end_time - start_time))
        log "ERROR" "‚ùå Backup falhou ap√≥s ${duration}s"
        return 1
    fi
}

# Fun√ß√£o para executar monitoramento
run_monitoring() {
    log "INFO" "üëÄ Executando monitoramento..."
    if node "$MONITORING_SCRIPT" >> "$LOG_FILE" 2>&1; then
        log "SUCCESS" "‚úÖ Monitoramento conclu√≠do"
        return 0
    else
        log "ERROR" "‚ùå Monitoramento falhou"
        return 1
    fi
}

# Fun√ß√£o para executar limpeza
run_cleanup() {
    log "INFO" "üßπ Executando limpeza de backups antigos..."
    if node "$CLEANUP_SCRIPT" >> "$LOG_FILE" 2>&1; then
        log "SUCCESS" "‚úÖ Limpeza conclu√≠da"
        return 0
    else
        log "ERROR" "‚ùå Limpeza falhou"
        return 1
    fi
}

# Fun√ß√£o para backup semanal
run_weekly_backup() {
    log "INFO" "üìÖ Executando backup semanal..."
    # Criar backup especial semanal (pode ser mais otimizado)
    if run_backup; then
        log "SUCCESS" "‚úÖ Backup semanal conclu√≠do"
        return 0
    else
        log "ERROR" "‚ùå Backup semanal falhou"
        return 1
    fi
}

# Fun√ß√£o para backup mensal
run_monthly_backup() {
    log "INFO" "üìÜ Executando backup mensal..."
    # Criar backup especial mensal (compress√£o m√°xima)
    if run_backup; then
        log "SUCCESS" "‚úÖ Backup mensal conclu√≠do"
        return 0
    else
        log "ERROR" "‚ùå Backup mensal falhou"
        return 1
    fi
}

# Inicializa√ß√£o
log "INFO" "üéØ Songmetrix Backup Service iniciado"
log "INFO" "üìç Container: $(hostname)"
log "INFO" "‚è∞ Timezone: $(date +%Z)"
log "INFO" "üìä Agendamento:"
log "INFO" "   ‚Ä¢ Backup di√°rio: 02:00 AM"
log "INFO" "   ‚Ä¢ Backup semanal: Domingo 03:00 AM"
log "INFO" "   ‚Ä¢ Backup mensal: Dia 1 04:00 AM"
log "INFO" "   ‚Ä¢ Monitoramento: A cada 6 horas"

# Backup inicial (30 segundos ap√≥s inicializa√ß√£o)
log "INFO" "‚è≥ Aguardando inicializa√ß√£o do sistema..."
sleep 30
run_backup

# Loop principal de monitoramento
log "INFO" "üîÑ Iniciando loop de automa√ß√£o..."

while true; do
    # Obter hora atual
    HOUR=$(date +%H)
    MINUTE=$(date +%M)
    DAY=$(date +%d)
    WEEKDAY=$(date +%w)  # 0=domingo

    # Backup di√°rio √†s 02:00
    if [ "$HOUR" = "02" ] && [ "$MINUTE" = "00" ]; then
        run_backup
        sleep 60  # Evitar m√∫ltiplas execu√ß√µes
    fi

    # Backup semanal aos domingos √†s 03:00
    if [ "$WEEKDAY" = "0" ] && [ "$HOUR" = "03" ] && [ "$MINUTE" = "00" ]; then
        run_weekly_backup
        sleep 60
    fi

    # Backup mensal no dia 1 √†s 04:00
    if [ "$DAY" = "01" ] && [ "$HOUR" = "04" ] && [ "$MINUTE" = "00" ]; then
        run_monthly_backup
        sleep 60
    fi

    # Monitoramento a cada 6 horas (00:00, 06:00, 12:00, 18:00)
    if [ "$MINUTE" = "00" ] && { [ "$HOUR" = "00" ] || [ "$HOUR" = "06" ] || [ "$HOUR" = "12" ] || [ "$HOUR" = "18" ]; }; then
        run_monitoring
        sleep 60
    fi

    # Aguardar 1 minuto antes de verificar novamente
    sleep 60
done

# Este ponto nunca ser√° alcan√ßado em execu√ß√£o normal
log "INFO" "üõë Songmetrix Backup Service finalizado"
exit 0