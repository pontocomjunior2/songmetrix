rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Função auxiliar para verificar se é admin
    function isAdmin() {
      return request.auth != null && 
             ('admin' in request.auth.token) && 
             request.auth.token.admin == true;
    }
    
    // Função auxiliar para verificar se é o próprio usuário
    function isUser(userId) {
      return request.auth != null && 
             request.auth.uid == userId;
    }

    // Função auxiliar para verificar se o usuário está ativo
    function isActiveUser() {
      return request.auth != null && 
             exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
             (get(/databases/$(database)/documents/users/$(request.auth.uid)).data.status == 'ATIVO' ||
              get(/databases/$(database)/documents/users/$(request.auth.uid)).data.status == 'ADMIN');
    }
    
    // Regras para a coleção users
    match /users/{userId} {
      // Permitir leitura/escrita para admin
      allow read, write: if isAdmin();
      
      // Permitir leitura para o próprio usuário
      allow read: if isUser(userId);
      
      // Permitir escrita para o próprio usuário (exceto status ADMIN)
      allow write: if isUser(userId) && 
                     (!('status' in request.resource.data) || 
                      request.resource.data.status != 'ADMIN');
    }

    // Regras para a coleção music_log
    match /music_log/{document=**} {
      allow read: if isActiveUser();
      allow write: if isAdmin();
    }

    // Regras para outras coleções
    match /{collection}/{document=**} {
      allow read: if collection != 'users' && collection != 'music_log' && isActiveUser();
      allow write: if collection != 'users' && collection != 'music_log' && isAdmin();
    }
  }
}
